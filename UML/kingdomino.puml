@startuml
skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
hide enum methods

class LauncherKingdomino{
    + {static} main( args:String[] )
}

package Model{

    class GameFacade{

    }


    class SetFacade{

    }

    class EntitiesFacade{

    }

    package Entities{
            Graph *-l-> Dominoes : <<composed of>> > "-_arrayDominoes 1"
            class Graph {
                +Graph()
                +getDomino(x:Integer, y:Integer):Dominoes
                +setDomino(domino:Dominoes)
                +getKing():King
                +setKing(king:King)

            }
            class King{

            }


        Deck *-d-> "-_listDominoes\n0..*"Dominoes : <<composed of>> >
            class Deck{
                +Deck()
                +getStack()
                +shuffle()
                +giveADomino()
            }

            class Dominoes {
               -id:Integer
               -firstSuitColor:String
               -secondSuitColor:String
               -crownsFirstSuit:Integer
               -crownsSecondSuit:Integer

               +Dominoes(id:Integer, firstSuitColor:String, secondSuitColor:String,
               crownsFirstSuit:Integer, crownsSecondSuit:Integer)
               +getPosition():
            }

            Player *-l-> Graph : > <<has>>
            Player *--> King : > <<has>>
            class Player {

            }

            enum KingColor {
                +PINK
                +YELLOW
                +GREEN
                +BLUE
            }

    }


    package Set{
        class SetNumberPlayer{
                +setStrategyPlayer()
                +executeStrategy()
         }

        SetNumberPlayer o--> "-_strategy\n1"NumberPlayerStrategy: > <<select>>

        package Number{
                class Duo implements NumberPlayerStrategy
                {

                }

                class AboveTwo implements NumberPlayerStrategy
                {

                }
        }


            class SetGameMode{
                +setStrategy()
                +executeStrategy()
            }

            SetGameMode o--> "-_strategy\n1"GameModeStrategy : > <<select>>
            interface GameModeStrategy<<interface>>{
                gameModeStrategy()
            }


            package Mode{
                class Dynasty implements GameModeStrategy{

                }

                class MiddleKingdom implements GameModeStrategy{

                }

                class Harmony implements GameModeStrategy{

                }

                class MightyDuel implements GameModeStrategy{

                }
            }

    }

    interface NumberPlayerStrategy<<interface>>{
        +strategyPlayer()
    }




}

package View {
    class KingDominoGUI
    {

    }
}

package Controller {

    class Controller{
        +doKingDomino()
    }

}

LauncherKingdomino ..> KingDominoGUI : <<create>> >
LauncherKingdomino ..> Controller : <<create>> >
SetFacade ..> SetNumberPlayer : <<create>> >
SetFacade ..> SetGameMode : <<create>> >
GameFacade *--> SetFacade : <<use>> >
GameFacade *-r-> EntitiesFacade : <<use>> >
EntitiesFacade .> Deck : <<create>> >
EntitiesFacade .> "-_listPlayers\n2..4"Player : <<create>> >
Controller ..> GameFacade : <<use>> >
King *-l-> "1\n- _color" KingColor : <<has>> >

@enduml